openapi: '3.0.2'

info:
  title: Family Budget
  version: '1.0'

servers:
  - url: http://localhost:8000

tags:
  - name: Revenue

paths:
  /revenues:
    get:
      tags:
        - "Revenue"
      operationId: getAllRevenues
      responses:
        '200':
          description: "Successfully found all Revenue Entities"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RevenueDTO"
    post:
      tags:
        - "Revenue"
      operationId: postRevenue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevenueDTO"
      responses:
        '201':
          description: "Successfully created Revenue Entity"
        '400':
          $ref: "#/components/responses/BadRequest"
  /revenues/{revenueId}:
    get:
      tags:
        - "Revenue"
      operationId: getRevenue
      parameters:
        - name: revenueId
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/RevenueId"
      responses:
        '200':
          description: "Successfully found Revenue Entity"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevenueDTO"
        '404':
          $ref: "#/components/responses/NotFound"
    put:
      tags:
        - "Revenue"
      operationId: updateRevenue
      parameters:
        - name: revenueId
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/RevenueId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevenueDTO"
      responses:
        '200':
          description: "Successfully updated Revenue Entity"
        '400':
          $ref: "#/components/responses/BadRequest"
        '404':
          $ref: "#/components/responses/NotFound"

components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
        - trace
      properties:
        code:
          type: integer
        message:
          type: string
        trace:
          type: string
        fieldList:
          type: array
          items:
            $ref: "#/components/schemas/ErrorField"
    ErrorField:
      type: object
      required:
        - code
        - message
        - field
      properties:
        code:
          type: string
        message:
          type: string
        field:
          type: string
    Page:
      type: object
      properties:
        page:
          type: integer
        numberOfElements:
          type: integer
        size:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean

    RevenuePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/RevenueDTO"
        page:
          $ref: "#/components/schemas/Page"
    RevenueDTO:
      type: object
      required:
        - "description"
        - "value"
        - "date"
      properties:
        description:
          type: string
          example: "Salary"
        value:
          type: number
          example: 1383.14
        date:
          type: string
          format: date
    
    RevenueId:
      $ref: "#/components/schemas/IntegerId"
    IntegerId:
      type: integer
      format: int32
  
  responses:
    NotFound:
      description: "Could not find specific Entity"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    BadRequest:
      description: "Could not create/update Entity"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Deleted:
      description: "Successfully deleted Entity"
    